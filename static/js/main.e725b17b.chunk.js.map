{"version":3,"sources":["components/Categories.js","components/NewsContainer.js","components/NewsArticleContainer.js","components/categories/All.js","components/categories/Science.js","components/categories/Business.js","components/categories/Politics.js","components/categories/Sports.js","components/LoadingScreen.js","App.js","serviceWorker.js","index.js"],"names":["Categories","props","to","className","NewsContainer","children","NewsArticleContainer","href","url","style","textDecoration","color","target","rel","title","content","src","urlToImage","alt","author","publishedAt","All","articles","map","article","index","key","Science","science","Business","business","Politics","politics","Sports","sports","LoadingScreen","type","height","width","newsapi","NewsAPI","corsProxyUrl","App","state","v2","topHeadlines","language","country","then","response","setState","category","this","length","path","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e725b17b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Categories.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Categories(props) {\r\nreturn(\r\n          <article>\r\n              <Link to=\"/\"><button className=\"f6 dim no-underline br-pill ba ph3 pv2 mb2 dib black ma2\" >All</button></Link>\r\n              <Link to=\"/business\"><button className=\"f6 dim no-underline br-pill ba ph3 pv2 mb2 dib black ma2\" >Business</button></Link>\r\n              <Link to=\"/science\"><button className=\"f6 dim no-underline br-pill ba ph3 pv2 mb2 dib black ma1\" >Science</button></Link>\r\n              <Link to=\"/politics\"><button className=\"f6 dim no-underline br-pill ba ph3 pv2 mb2 dib black ma1\" >Politics</button></Link>\r\n              <Link to=\"/sports\"><button className=\"f6 dim no-underline br-pill ba ph3 pv2 mb2 dib black ma1\" >Sports</button></Link>\r\n            </article>\r\n)\r\n}\r\n\r\nexport default Categories","import React from 'react'\r\nimport Categories from './Categories'\r\n\r\nfunction NewsContainer(props) {\r\n    return(\r\n    <section className=\"mw8 center\">\r\n    <h2 className=\"athelas ph3 ph0-1\">News</h2>\r\n    <Categories /> \r\n     {props.children}\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default NewsContainer","import React from 'react'\r\n\r\nfunction NewsArticleContainer(props) {\r\n  return (\r\n    <article className=\"pv4 bt bb b--black-10 ph3 ph0-1\">\r\n      <div className=\"flex flex-column flex-row-ns\">\r\n        <div className=\"w-100 w-60-ns pr3-ns order-2 order-1-ns\">\r\n          <a href={props.url}\r\n            style={{ textDecoration: 'none', color: 'black' }}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <h1 className=\"f3 athelas mt0 lh-title\">{props.title}</h1>\r\n          </a>\r\n          <p className=\"f5 f4-l lh-copy athelas\">\r\n            {props.content}\r\n          </p>\r\n        </div>\r\n        <div className=\"pl3-ns order-1 order-2-ns mb4 mb0-ns w-100 w-40-ns\">\r\n          <a href={props.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <img src={props.urlToImage} className=\"db\" alt=\"\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <p className=\"f6 lh-copy gray mv0\">By <span className=\"ttu\">{props.author}</span></p>\r\n      <time className=\"f6 db gray\">{props.publishedAt}</time>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default NewsArticleContainer","import React from 'react'\r\nimport NewsContainer from '../NewsContainer'\r\nimport NewsArticleContainer from '../NewsArticleContainer'\r\n\r\nfunction All(props) {\r\n\r\n    return (\r\n        <NewsContainer>\r\n        {\r\n         props.articles.map((article, index) => <NewsArticleContainer\r\n         key={index}\r\n         title={article.title}\r\n         content={article.content}\r\n         urlToImage={article.urlToImage}\r\n         author={article.author}\r\n         publishedAt={article.publishedAt}\r\n         url={article.url}\r\n         />)  \r\n        }\r\n      </NewsContainer>\r\n    )\r\n}\r\n\r\nexport default All","import React from 'react'\r\nimport NewsContainer from '../NewsContainer'\r\nimport NewsArticleContainer from '../NewsArticleContainer'\r\n\r\nfunction Science(props) {\r\n\r\n    return (\r\n        <NewsContainer>\r\n        {\r\n         props.science.map((article, index) => <NewsArticleContainer\r\n         key={index}\r\n         title={article.title}\r\n         content={article.content}\r\n         urlToImage={article.urlToImage}\r\n         author={article.author}\r\n         publishedAt={article.publishedAt}\r\n         url={article.url}\r\n         />)  \r\n        }\r\n      </NewsContainer>\r\n    )\r\n}\r\n\r\nexport default Science","import React from 'react'\r\nimport NewsContainer from '../NewsContainer'\r\nimport NewsArticleContainer from '../NewsArticleContainer'\r\n\r\nfunction Business(props) {\r\n\r\n    return (\r\n        <NewsContainer>\r\n        {\r\n         props.business.map((article, index) => <NewsArticleContainer\r\n         key={index}\r\n         title={article.title}\r\n         content={article.content}\r\n         urlToImage={article.urlToImage}\r\n         author={article.author}\r\n         publishedAt={article.publishedAt}\r\n         url={article.url}\r\n         />)  \r\n        }\r\n      </NewsContainer>\r\n    )\r\n}\r\n\r\nexport default Business","import React from 'react'\r\nimport NewsContainer from '../NewsContainer'\r\nimport NewsArticleContainer from '../NewsArticleContainer'\r\n\r\nfunction Politics(props) {\r\n\r\n    return (\r\n        <NewsContainer>\r\n        {\r\n         props.politics.map((article, index) => <NewsArticleContainer\r\n         key={index}\r\n         title={article.title}\r\n         content={article.content}\r\n         urlToImage={article.urlToImage}\r\n         author={article.author}\r\n         publishedAt={article.publishedAt}\r\n         url={article.url}\r\n         />)  \r\n        }\r\n      </NewsContainer>\r\n    )\r\n}\r\n\r\nexport default Politics","import React from 'react'\r\nimport NewsContainer from '../NewsContainer'\r\nimport NewsArticleContainer from '../NewsArticleContainer'\r\n\r\nfunction Sports(props) {\r\n\r\n    return (\r\n        <NewsContainer>\r\n        {\r\n         props.sports.map((article, index) => <NewsArticleContainer\r\n         key={index}\r\n         title={article.title}\r\n         content={article.content}\r\n         urlToImage={article.urlToImage}\r\n         author={article.author}\r\n         publishedAt={article.publishedAt}\r\n         url={article.url}\r\n         />)  \r\n        }\r\n      </NewsContainer>\r\n    )\r\n}\r\n\r\nexport default Sports","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nimport './LoadingScreen.css'\r\nfunction LoadingScreen() {\r\n    return (\r\n        <div className=\"container\">\r\n            <Loader\r\n                type=\"Puff\"\r\n                color=\"#00BFFF\"\r\n                height={200}\r\n                width={200}\r\n                //timeout={3000} //3 secs\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingScreen","import React from 'react';\nimport NewsAPI from 'newsapi'\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport All from './components/categories/All'\nimport Science from './components/categories/Science'\nimport Business from './components/categories/Business'\nimport Politics from './components/categories/Politics'\nimport Sports from './components/categories/Sports'\nimport LoadingScreen from './components/LoadingScreen'\n\nconst newsapi = new NewsAPI('cf7313e1ac4246f0a4d6188b4e531d56',\n  { corsProxyUrl: 'https://cors-anywhere.herokuapp.com/' })\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      articles: [],\n      science: [],\n      business: [],\n      politics: [],\n      sports: []\n    }\n\n  }\n\n  componentDidMount() {\n    newsapi.v2.topHeadlines({\n      language: 'en',\n      country: 'in'\n    }).then(response => {\n      this.setState({ articles: response.articles })\n\n    });\n    newsapi.v2.topHeadlines({\n      category: 'science',\n      language: 'en',\n      country: 'in'\n    }).then(response => {\n      this.setState({ science: response.articles })\n    });\n    newsapi.v2.topHeadlines({\n      category: 'business',\n      language: 'en',\n      country: 'in'\n    }).then(response => {\n      this.setState({ business: response.articles })\n    });\n    newsapi.v2.topHeadlines({\n      category: 'politics',\n      language: 'en',\n      country: 'in'\n    }).then(response => {\n      this.setState({ politics: response.articles })\n    });\n    newsapi.v2.topHeadlines({\n      category: 'sports',\n      language: 'en',\n      country: 'in'\n    }).then(response => {\n      this.setState({ sports: response.articles })\n    });\n\n  }\n\n\n  render() {\n\n    if (this.state.articles.length === 0) {\n      return (\n        <LoadingScreen />\n      )\n    }\n    else {\n      return (\n        <Router>\n          <div>\n            {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/politics\">\n                <Politics politics={this.state.politics} />\n              </Route>\n              <Route path=\"/sports\">\n                <Sports sports={this.state.sports} />\n              </Route>\n              <Route path=\"/business\">\n                <Business business={this.state.business} />\n              </Route>\n              <Route path=\"/science\">\n                <Science science={this.state.science} />\n              </Route>\n              <Route path=\"/\">\n                <All articles={this.state.articles} />\n              </Route>\n            </Switch>\n          </div>\n        </Router>)\n\n    }\n  }\n\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}